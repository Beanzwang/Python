#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Feb  3 22:47:35 2017

@author: wangbeanz
"""

import cv2
import numpy as np

# image arithmetics and logic
img1 = cv2.imread('cat2.jpg')
img2 = cv2.imread('cat3.jpg')
img3 = cv2.imread('python-logo.png')

# add = img1 + img2
# (155, 211, 79) + (50, 170, 200) = (205, 381, 279) -> (205, 255, 255)
# add = cv2.add(img1, img2)
# weighted = cv2.addWeighted(img1, 0.6, img2, 0.4, 0)

# cv2.imshow('add', add)
# cv2.imshow('weighted', weighted)

rows, cols, channels = img3.shape
roi = img1[:rows, 0:cols]

img3gray = cv2.cvtColor(img3, cv2.COLOR_BGR2GRAY)
# If the pixel value is above 220, it will be converted into 255 (white).
# If it is below 220, it will be converted into black.
# ret is short for return.
ret, mask = cv2.threshold(img3gray, 70, 255, cv2.THRESH_BINARY_INV)
mask_inv = cv2.bitwise_not(mask)
img1_bg = cv2.bitwise_and(roi, roi, mask = mask_inv)
img3_fg = cv2.bitwise_and(img3, img3, mask=mask)

dst = cv2.add(img1_bg, img3_fg)
img1[0:rows, 0:cols] = dst

cv2.imshow('rest', img1)
# cv2.imshow('mask_inv', mask_inv)
# cv2.imshow('img1_bg', img1_bg)
# cv2.imshow('img3_fg', img3_fg)
# cv2.imshow('dst', dst)
  
# cv2.imshow('mask', mask)
cv2.waitKey(0)
cv2.destroyAllWindows()