#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Feb  7 13:53:08 2017

@author: wangbeanz
"""

import numpy as np

# counting the times it occures in the start and end pages.
transitions = {}  # storing the start and end pages.
row_sums = {}

# collect counts
for line in open('site_data.csv'):
    s, e = line.rstrip().split(',')  # get the start and end pages
    # (s, e) is the key, and the default value of the key will be 0.
    # 1 means add the times of the occurance of (s, e) pair.
    transitions[(s, e)] = transitions.get((s, e), 0.) + 1
    row_sums[s] = row_sums.get(s, 0.) + 1

# normalize
for k, v in transitions.items():
    s, e = k  # k is key, while v is the value.
    transitions[k] = v / row_sums[s]
    
# initial state distribution
print("initial state distribution")
for k, v in transitions.items():
    s, e = k
    if s == '-1':
        print(e, v)

# which page has the highest bouncd?
for k, v in transitions.items():
    s, e = k
    if e == 'B':
        print("bounce rate for %s: %s" % (s, v))
    